@model ScendMvc.Models.Proposal
@{ ViewData["Title"] = "Details"; }

<h1 id="max"> @Html.DisplayFor(model => model.Target)</h1>
<h1 id="value"> @Html.DisplayFor(model => model.CurrentAmount)</h1>
<h1 id="poposal_id"> @Html.DisplayFor(model => model.ProposalId)</h1>


<div class="container" id="ProductPage">
    <div class="row">
        @*=================影片==============================*@
        <section class="col-12 col-lg-8 video_section" id="video_section">
            <div id="content">
                <canvas id="canvas"></canvas>
                <iframe id="video" width="560" height="315" src="https://www.youtube.com/embed/UP0D8X_J1II" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            </div>
        </section>
        @*=================聊天室==============================*@
        <div class="col-12 col-lg-4 chat_section">
            <div class="chat row flex-column justify-content-between">
                <div class="d-block" id="messagesList"></div>
                <div class="d-block mt-1" id="send">
                    <select id="group">
                        <option>貓派</option>
                        <option>狗派</option>
                    </select>
                    <button type="button" id="addGroupBtn" onclick="start()">加入群組</button>
                    <br>
                    姓名：<input id="name" type="text"><br>
                    訊息<input id="msg" type="text">
                    <br>
                    <button type="Button" class="btn btn-outline-info" id="submitGroupBtn">送出給群組</button>
                    <button type="Button" class="btn btn-outline-dark" id="submitAllBtn">送出給所有人</button>
                    <div class="mt-2">
                        <span class="name">顏色：</span>
                        <input type="color" placeholder="選擇顏色" value="#000" id="colorInput">
                        <span class="name">文字大小：</span>
                        <input type="range" min="20" max="40" value="20" id="rangeInput">
                    </div>
                </div>
            </div>
        </div>

        @*=================資訊欄==============================*@
        <div class="col-12 mx-auto" id="info">
            <b-tabs active-nav-item-class="font-weight-bold text-uppercase text-danger"
                    active-tab-class="font-weight-bold text-success"
                    content-class="mt-3">
                <b-tab title="STORY" active>
                    <div>FOUNDING</div>
                    <article>
                        <h3>
                            <b-progress :max="max">
                                <b-progress-bar :value="value" :label="`${((value / max) * 100).toFixed(2)}%`"></b-progress-bar>
                            </b-progress>
                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. At, pariatur?</p>
                            <div class="d-flex mx-auto">
                                <button class="col-3"><a asp-action="Edit" asp-route-id="@Model.ProposalId" onclick="Save()">支持</a></button>
                                <button class="col-3">跟隨</button>
                                <div class="col-4 d-flex   "><a href=""><i class="fab fa-facebook-square" id="icon"></i></a></div>
                            </div>
                        </h3>
                        <H3>
                            @Model.Title
                        </H3>
                        <p>
                            @Model.Summary
                        </p>
                        <div class="d-flex" id="">
                            <div class="col-1 bg-success"></div>
                            <div>
                                <a href="">1233</a>
                                <p>1個廣告/地點</p>
                            </div>
                        </div>
                        <div class="d-flex">
                            <h3>NT${{value}}</h3>
                        </div>
                        <p>------------------------------------------</p>
                    </article>
                </b-tab>
                <b-tab title="FAQ"><p>I'm the second tab</p></b-tab>
                <b-tab title="COMMENTS"><p>I'm a disabled tab!</p></b-tab>
            </b-tabs>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/signalr.js"></script>
    <script src="~/js/barrage.js"></script>
    <script>
        function Save() {
            var Id = document.getElementById("poposal_id");
            var ProductId = parseInt(Id.innerText);
            var Web_URL = `/Proposals/Details/${ProductId}`;
            localStorage.setItem("URL", `${Web_URL}`);
        }
        var max = document.getElementById("max");
        var Productmax = parseInt(max.innerText);

        var value = document.getElementById("value");
        var Productvalue = parseInt(value.innerText);



        var test = new Vue({
            el: '#ProductPage',
            data: {
                max: Productmax,
                value: Productvalue
            },
        });
        "use strict";

        ////
        const $ = document.querySelector.bind(document);
        const canvas = $('#canvas');
        const video = $('#video');

        //上面彈幕
        // 建立SignalR連接
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        // 連接事件
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
        // 全頻道訊息
        document.getElementById('submitAllBtn').addEventListener('click', function () {
            var user = document.getElementById("name").value;
            var message = document.getElementById("msg").value;
            connection.invoke("SendMessage", user, message).catch(function (err) {
                return console.error(err.toString());
            });
        })
        // 全頻道訊息傳送訊息事件
        connection.on("ReceiveMessage", function (user, message) {
            var msg = `[全頻道訊息]${user}：${message}`;
            var li = document.createElement("li");
            li.textContent = msg;
            document.getElementById("messagesList").appendChild(li);
            Jump(message, false);
            scroll_bottom();
        });
        // 加入群組事件
        document.getElementById("addGroupBtn").addEventListener("click", function (event) {
            var user = document.getElementById("name").value;
            var group = document.getElementById("group").value;
            connection.invoke("AddGroup", group, user).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });
        // 接收加入群組訊息
        connection.on("RecAddGroupMsg", function (message) {
            var msg = message;
            var li = document.createElement("li");
            li.textContent = msg;
            document.getElementById("messagesList").appendChild(li);
        });
        // 群組訊息Button事件
        document.getElementById("submitGroupBtn").addEventListener("click", function (e) {
            var user = document.getElementById("name").value;
            var group = document.getElementById("group").value;
            var message = document.getElementById("msg").value;
            connection.invoke("SendMessageToGroup", group, user, message).catch(function (err) {
                return console.error(err.toString());
            });
        });

        // 群組訊息接收事件
        connection.on("ReceiveGroupMessage", function (groupName, user, message) {
            console.log(user);
            var msg = `[群組訊息(${groupName})]${user}：${message}`;
            var li = document.createElement("li");
            li.textContent = msg;
            document.getElementById("messagesList").appendChild(li);
            Jump(message, false);
            scroll_bottom();
        });
        const canvasBarrage = new CanvasBarrage(canvas, video, {
        });
        // 播放
        video.addEventListener('play', function () {
            canvasBarrage.isPaused = false;
            canvasBarrage.render();
        }, false)
        // 暫停
        video.addEventListener('pause', function () {
            canvasBarrage.isPaused = true;
        }, false)
        // 調整時間
        video.addEventListener('seeked', function () {
            canvasBarrage.reset()
        }, false)
        // 添加彈幕
        function Jump(x) {
            const value = x,
                time = video.currentTime,
                color = $('#colorInput').value,
                fontSize = $('#rangeInput').value;
            const obj = { value, time, color, fontSize };
            //debugger;
            canvasBarrage.addBarrage(obj);
            //input.value = '';
        }
        function scroll_bottom() {
            var objDiv = document.getElementById("messagesList");
            objDiv.scrollTop = objDiv.scrollHeight + 5;
        }
    </script>
}
@section TopCss {
    <link href="~/css/ProductPage.css" rel="stylesheet">
    <style>
        #ProductId, #max, #value, #poposal_id {
            display: none;
        }
    </style>
    
}